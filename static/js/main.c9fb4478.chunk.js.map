{"version":3,"sources":["App.js","index.js"],"names":["App","randomInteger","min","max","rand","Math","random","round","squares","i","push","bluesCount","validSquares","fill","coloredSqr","map","square","useState","squaresState","pickedSquares","className","key","onClick","e","includes","filter","item","currentTarget","classList","remove","add","sort","handleClick","JSON","stringify","setTimeout","window","location","reload","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAyFeA,MApFf,WAEC,SAASC,EAAcC,EAAKC,GAC3B,IAAIC,EAAOF,EAAM,GAAMG,KAAKC,UAAYH,EAAMD,EAAM,GACpD,OAAOG,KAAKE,MAAMH,GAKnB,IAFA,IAAMI,EAAU,GAEPC,EAAI,EAAGA,EAAI,EAAGA,IACtBD,EAAQE,KAAKT,EAAc,EAAG,IAG/B,IAAMU,EAAaV,EAAc,EAAG,GAC9BW,EAAe,GAErBJ,EAAQK,KAAK,EAAG,EAAGF,GAEnB,IAAMG,EAAaN,EAAQO,KAAI,SAACC,EAAQP,GAQvC,OALe,IAAXO,GACHJ,EAAaF,KAAKD,GAIXO,GACP,KAAK,EAAG,MAAO,OACf,KAAK,EAAG,MAAO,MACf,KAAK,EAAG,MAAO,QACf,KAAK,EAAG,MAAO,SACf,KAAK,EAAG,MAAO,QACf,KAAK,EAAG,MAAO,OACf,QAAS,MAAO,YAjCJ,EAsCSC,mBAASH,GAAzBI,EAtCO,oBAyCVC,EAAgB,GA8BpB,OACC,yBAAKC,UAAU,OACd,yBAAKA,UAAU,WACbN,EAAWC,KAAI,SAACC,EAAQP,GACxB,OAAO,uBAAGY,IAAKZ,EAAGW,UAAS,iBAAYF,EAAaT,IAAMa,QAAS,SAAAC,GAAC,OA/BpD,SAACA,EAAGd,GAElBU,EAAcK,SAASf,IAI3BU,EAAgBA,EAAcM,QAAO,SAAAC,GAAI,OAAIA,IAASjB,KACtDc,EAAEI,cAAcC,UAAUC,OAAO,cAJjCV,EAAcT,KAAKD,GACnBc,EAAEI,cAAcC,UAAUE,IAAI,aAK/BX,EAAcY,OAsB6DC,CAAYT,EAAGd,UAIzF,yBAAKW,UAAU,SAASE,QAAS,WAnBjCW,KAAKC,UAAUf,KAAmBc,KAAKC,UAAUtB,IAEjDuB,YAAW,kBAAMC,OAAOC,SAASC,QAAO,KACrC,KACHC,MAAM,4BAENA,MAAM,uCAaN,YC9EHC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c9fb4478.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n\n\nfunction App() {\n//функция рандомизации с диапазоном\n\tfunction randomInteger(min, max) {\n\t\tlet rand = min - 0.5 + Math.random() * (max - min + 1);\n\t\treturn Math.round(rand);\n\t}\n\n\tconst squares = []\n\t//заполняем массив шестью элементами со значением от 1 до 5 (в будущем - цвета)\n\tfor (var i = 0; i < 6; i++) {\n\t\tsquares.push(randomInteger(1, 5));\n\t}\n\t//определяем кол-во синих квадратов\n\tconst bluesCount = randomInteger(1, 3);\n\tconst validSquares = []\n\t//заполняем массив (1-3) 6-ками (в будущем - синие квадраты)\n\tsquares.fill(6, 0, bluesCount)\n\n\tconst coloredSqr = squares.map((square, i) => {\n\n\t\t//добавление в массив валлидных квадратов все синие\n\t\tif (square === 6) {\n\t\t\tvalidSquares.push(i)\n\t\t}\n\n\t\t//назначение цветов (для передачи в класс из состояния)\n\t\tswitch (square) {\n\t\t\tcase 6: return 'blue'\n\t\t\tcase 5: return 'red'\n\t\t\tcase 4: return 'green'\n\t\t\tcase 3: return 'orange'\n\t\t\tcase 2: return 'black'\n\t\t\tcase 1: return 'pink'\n\t\t\tdefault: return 'black'\n\t\t}\n\t})\n\n \t//инициализируем состояние с квадратами\n\tconst [squaresState] = useState(coloredSqr);\n\n\n\tlet pickedSquares = [];\n\n\n\tconst handleClick = (e, i) => {\n\t\t//добавление в массив с выбранными квадратами нужных && добавление класса selected\n\t\tif (!pickedSquares.includes(i)) {\n\t\t\tpickedSquares.push(i)\n\t\t\te.currentTarget.classList.add(\"selected\");\n\t\t} else {\n\t\t\tpickedSquares = pickedSquares.filter(item => item !== i)\n\t\t\te.currentTarget.classList.remove(\"selected\");\n\t\t}\n\t\tpickedSquares.sort()\n\n\t};\n\n//сравниваем приведённые к строке массивы с выбранными квадратами и валидными\n\tconst handleOnValidate = () => {\n\t\tif (\n\t\t\tJSON.stringify(pickedSquares) === JSON.stringify(validSquares)\n\t\t) {\n\t\t\tsetTimeout(() => window.location.reload(false)\n\t\t\t\t, 2000);\n\t\t\talert('right squares selected!')\n\t\t} else {\n\t\t\talert('choose right squares! (blue ones)')\n\t\t}\n\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<div className=\"wrapper\">\n\t\t\t\t{coloredSqr.map((square, i) => {\n\t\t\t\t\treturn <p key={i} className={`square ${squaresState[i]}`} onClick={e => handleClick(e, i)}></p>\n\t\t\t\t}\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className='submit' onClick={() => handleOnValidate(i)}>submit</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}